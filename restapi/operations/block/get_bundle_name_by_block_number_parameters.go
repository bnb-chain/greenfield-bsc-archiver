// Code generated by go-swagger; DO NOT EDIT.

package block

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// NewGetBundleNameByBlockNumberParams creates a new GetBundleNameByBlockNumberParams object
//
// There are no default values defined in the spec.
func NewGetBundleNameByBlockNumberParams() GetBundleNameByBlockNumberParams {

	return GetBundleNameByBlockNumberParams{}
}

// GetBundleNameByBlockNumberParams contains all the bound params for the get bundle name by block number operation
// typically these are obtained from a http.Request
//
// swagger:parameters getBundleNameByBlockNumber
type GetBundleNameByBlockNumberParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*Block identifier. Can be one of: 'head' (canonical head in node's view), 'genesis', 'finalized', <slot>, <hex encoded blockRoot with 0x prefix>
	  Required: true
	  Min Length: 1
	  In: path
	*/
	BlockNumber string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewGetBundleNameByBlockNumberParams() beforehand.
func (o *GetBundleNameByBlockNumberParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	rBlockNumber, rhkBlockNumber, _ := route.Params.GetOK("block_number")
	if err := o.bindBlockNumber(rBlockNumber, rhkBlockNumber, route.Formats); err != nil {
		res = append(res, err)
	}
	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindBlockNumber binds and validates parameter BlockNumber from path.
func (o *GetBundleNameByBlockNumberParams) bindBlockNumber(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route
	o.BlockNumber = raw

	if err := o.validateBlockNumber(formats); err != nil {
		return err
	}

	return nil
}

// validateBlockNumber carries on validations for parameter BlockNumber
func (o *GetBundleNameByBlockNumberParams) validateBlockNumber(formats strfmt.Registry) error {

	if err := validate.MinLength("block_number", "path", o.BlockNumber, 1); err != nil {
		return err
	}

	return nil
}
