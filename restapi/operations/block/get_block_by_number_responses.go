// Code generated by go-swagger; DO NOT EDIT.

package block

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"greeenfield-bsc-archiver/models"
)

// GetBlockByNumberOKCode is the HTTP code returned for type GetBlockByNumberOK
const GetBlockByNumberOKCode int = 200

/*
GetBlockByNumberOK successful operation

swagger:response getBlockByNumberOK
*/
type GetBlockByNumberOK struct {

	/*
	  In: Body
	*/
	Payload *models.GetBlockByNumberRPCResponse `json:"body,omitempty"`
}

// NewGetBlockByNumberOK creates GetBlockByNumberOK with default headers values
func NewGetBlockByNumberOK() *GetBlockByNumberOK {

	return &GetBlockByNumberOK{}
}

// WithPayload adds the payload to the get block by number o k response
func (o *GetBlockByNumberOK) WithPayload(payload *models.GetBlockByNumberRPCResponse) *GetBlockByNumberOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get block by number o k response
func (o *GetBlockByNumberOK) SetPayload(payload *models.GetBlockByNumberRPCResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBlockByNumberOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetBlockByNumberInternalServerErrorCode is the HTTP code returned for type GetBlockByNumberInternalServerError
const GetBlockByNumberInternalServerErrorCode int = 500

/*
GetBlockByNumberInternalServerError internal server error

swagger:response getBlockByNumberInternalServerError
*/
type GetBlockByNumberInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetBlockByNumberInternalServerError creates GetBlockByNumberInternalServerError with default headers values
func NewGetBlockByNumberInternalServerError() *GetBlockByNumberInternalServerError {

	return &GetBlockByNumberInternalServerError{}
}

// WithPayload adds the payload to the get block by number internal server error response
func (o *GetBlockByNumberInternalServerError) WithPayload(payload *models.Error) *GetBlockByNumberInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get block by number internal server error response
func (o *GetBlockByNumberInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetBlockByNumberInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
